To integrate the Unsplash API into your Replit project for dynamic image generation, follow these steps:

‚∏ª

üîë 1. Obtain Your Unsplash Access Key

After registering your application on Unsplash, you‚Äôll receive an Access Key. This key is essential for authenticating your API requests.

‚∏ª

üõ†Ô∏è 2. Set Up the Unsplash API in Your Project

a. Install Dependencies

If you‚Äôre using Node.js, install the unsplash-js package:

npm install unsplash-js node-fetch

b. Configure the Unsplash Client

Create a file named unsplashClient.js and add the following code:

import { createApi } from 'unsplash-js';
import nodeFetch from 'node-fetch';

const unsplash = createApi({
  accessKey: 'YOUR_ACCESS_KEY', // Replace with your actual Access Key
  fetch: nodeFetch,
});

export default unsplash;



‚∏ª

üñºÔ∏è 3. Fetch Images Based on Keywords

To retrieve images related to specific keywords (e.g., ‚Äúindian food plate‚Äù), use the following function:

import unsplash from './unsplashClient';

async function fetchImageUrl(query) {
  try {
    const result = await unsplash.search.getPhotos({
      query,
      perPage: 1,
    });

    if (result.response.results.length > 0) {
      return result.response.results[0].urls.small;
    } else {
      console.log('No images found for the query:', query);
      return null;
    }
  } catch (error) {
    console.error('Error fetching image:', error);
    return null;
  }
}



‚∏ª

üì¶ 4. Integrate with Your Application

In your main application file (e.g., App.js or App.tsx), use the fetchImageUrl function to retrieve and display images:

import React, { useEffect, useState } from 'react';
import fetchImageUrl from './fetchImageUrl'; // Ensure this path is correct

function App() {
  const [imageUrl, setImageUrl] = useState('');

  useEffect(() => {
    async function getImage() {
      const url = await fetchImageUrl('indian food plate');
      if (url) {
        setImageUrl(url);
      }
    }

    getImage();
  }, []);

  return (
    <div>
      <h1>Delicious Indian Food</h1>
      {imageUrl && <img src={imageUrl} alt="Indian Food Plate" />}
    </div>
  );
}

export default App;



‚∏ª

‚ö†Ô∏è Important Notes
	‚Ä¢	Rate Limits: Unsplash API has rate limits. Ensure you handle errors and avoid exceeding the allowed number of requests.
	‚Ä¢	Attribution: According to Unsplash‚Äôs guidelines, you must provide proper attribution when displaying images.
	‚Ä¢	Environment Variables: For security, store your Access Key in environment variables, especially if you‚Äôre deploying your application. Ôøº

‚∏ª

By following these steps, you can dynamically fetch and display images from Unsplash in your Replit project. If you need further assistance or have specific requirements, feel free to ask!